# Generated by Django 3.1.7 on 2021-03-23 22:13

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("utils", "0001_initial"),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("STUDENT", "student"),
                            ("PARENT", "parent"),
                            ("INSTITUTE", "institute"),
                            ("TEACHER", "teacher"),
                        ],
                        default="STUDENT",
                        max_length=50,
                        verbose_name="User Type",
                    ),
                ),
                (
                    "name",
                    models.CharField(blank=True, max_length=255, verbose_name="Name"),
                ),
                (
                    "phone",
                    models.CharField(blank=True, max_length=50, verbose_name="Phone"),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Address"
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("MALE", "male"), ("FEMALE", "female")],
                        default="MALE",
                        max_length=6,
                        verbose_name="Gender",
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date of birth"
                    ),
                ),
                (
                    "profile_image",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="user/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["jpg", "png", "jpeg"]
                            )
                        ],
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="utils.city",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="TeacherProfile",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "shifts",
                    multiselectfield.db.fields.MultiSelectField(
                        choices=[("MORNING", "morning"), ("EVENING", "evening")],
                        max_length=15,
                    ),
                ),
                (
                    "job_types",
                    multiselectfield.db.fields.MultiSelectField(
                        choices=[
                            ("PART_TIME", "part_time"),
                            ("FULL_TIME", "full_time"),
                        ],
                        max_length=19,
                    ),
                ),
                (
                    "availabilities",
                    multiselectfield.db.fields.MultiSelectField(
                        choices=[
                            ("PRIVATE", "private"),
                            ("GROUP", "group"),
                            ("ONLINE", "online"),
                            ("CENTRE", "centre"),
                        ],
                        max_length=27,
                    ),
                ),
                (
                    "cnic",
                    models.CharField(max_length=50, null=True, verbose_name="CNIC"),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "intro_link",
                    models.URLField(
                        blank=True, null=True, verbose_name="Introduction Video Link"
                    ),
                ),
                (
                    "demo_link",
                    models.URLField(
                        blank=True, null=True, verbose_name="Demo Video Link"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TeachingExperience",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=100, verbose_name="Title")),
                (
                    "location",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Location"
                    ),
                ),
                ("start_year", models.DateField(verbose_name="Start Year")),
                (
                    "end_year",
                    models.DateField(blank=True, null=True, verbose_name="End Year"),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "job_type",
                    models.CharField(
                        choices=[
                            ("PART_TIME", "part_time"),
                            ("FULL_TIME", "full_time"),
                        ],
                        max_length=15,
                        verbose_name="Job Type",
                    ),
                ),
                (
                    "institute",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Institute"
                    ),
                ),
                (
                    "subject",
                    multiselectfield.db.fields.MultiSelectField(
                        choices=[
                            ("ACCOUNTING", "accounting"),
                            ("AEROBICS", "aerobics"),
                            ("ANCIENT LITERATURE", "ancient literature"),
                            ("ANTHROPOLOGY", "anthropology"),
                            ("ARCHERY", "archery"),
                            ("ART", "art"),
                            ("ASTRONOMY", "astronomy"),
                            ("AUTO MECHANICS", "auto mechanics"),
                            ("BIOLOGY", "biology"),
                            ("BOTANY", "botany"),
                            ("BOWLING", "bowling"),
                            ("BUSINESS MATH", "business math"),
                            ("CAREER PLANNING", "career planning"),
                            ("CERAMICS", "ceramics"),
                            ("CHEMISTRY", "chemistry"),
                            ("CIVICS", "civics"),
                            ("CIVILIZATION", "civilization"),
                            ("COMPUTER GRAPHICS", "computer graphics"),
                            ("COMPUTER REPAIR", "computer repair"),
                            ("COMPUTER SCIENCE", "computer science"),
                            ("CREATIVE WRITING", "creative writing"),
                            ("CULINARY ARTS", "culinary arts"),
                            ("CYCLING", "cycling"),
                            ("DANCE", "dance"),
                            ("DIGITAL ARTS", "digital arts"),
                            ("DRAFTING", "drafting"),
                            ("DRAMATICS", "dramatics"),
                            ("DRAWING", "drawing"),
                            ("DRIVER\\u2019S EDUCATION", "driver\\u2019s education"),
                            ("ECOLOGY", "ecology"),
                            ("ECONOMICS", "economics"),
                            ("ENGLISH", "english"),
                            ("ENVIRONMENTAL SCIENCE", "environmental science"),
                            ("FENCING", "fencing"),
                            ("FINANCIAL MANAGEMENT", "financial management"),
                            ("FOOD SCIENCE", "food science"),
                            ("FORENSIC SCIENCE", "forensic science"),
                            ("GARDENING", "gardening"),
                            ("GENEALOGY", "genealogy"),
                            ("GEOGRAPHY", "geography"),
                            ("GEOLOGY", "geology"),
                            ("GOLF", "golf"),
                            ("GYMNASTICS", "gymnastics"),
                            ("HANDWORK OR HANDCRAFTS", "handwork or handcrafts"),
                            ("HANDWRITING", "handwriting"),
                            ("HEALTH", "health"),
                            ("HIKING", "hiking"),
                            ("HOME ECONOMICS", "home economics"),
                            ("HOME MANAGEMENT", "home management"),
                            ("HOME ORGANIZATION", "home organization"),
                            ("ICE SKATING", "ice skating"),
                            ("ISLAMIAT", "islamiat"),
                            ("JOURNALISM", "journalism"),
                            ("LANGUAGE ARTS", "language arts"),
                            ("LEATHER WORKING", "leather working"),
                            ("LIFE SCIENCE", "life science"),
                            ("MARINE BIOLOGY", "marine biology"),
                            ("MARTIAL ARTS", "martial arts"),
                            ("MATHEMATICS", "mathematics"),
                            ("METAL WORK", "metal work"),
                            ("METEOROLOGY", "meteorology"),
                            ("MODERN LITERATURE", "modern literature"),
                            ("MUSIC", "music"),
                            ("NUTRITION", "nutrition"),
                            ("OCEANOGRAPHY", "oceanography"),
                            ("PAINTING", "painting"),
                            ("PAKISTAN STUDIES", "pakistan studies"),
                            (
                                "PERSONAL FINANCE AND INVESTING",
                                "personal finance and investing",
                            ),
                            ("PHILOSOPHY", "philosophy"),
                            ("PHOTOGRAPHY", "photography"),
                            ("PHOTOSHOP", "photoshop"),
                            ("PHYSICS", "physics"),
                            ("POETRY", "poetry"),
                            ("POLITICAL SCIENCE", "political science"),
                            ("POTTERY", "pottery"),
                            ("PROGRAMMING", "programming"),
                            ("PSYCHOLOGY", "psychology"),
                            ("ROCK CLIMBING", "rock climbing"),
                            ("SCIENCE", "science"),
                            ("SCULPTURE", "sculpture"),
                            ("SMALL ENGINE MECHANICS", "small engine mechanics"),
                            ("SOCIAL SCIENCES", "social sciences"),
                            ("SOCIAL STUDIES", "social studies"),
                            ("SOCIOLOGY", "sociology"),
                            ("SPORTS", "sports"),
                            ("URDU", "urdu"),
                            ("WEB DESIGN", "web design"),
                            ("WEIGHTLIFTING", "weightlifting"),
                            ("WORLD HISTORY", "world history"),
                            ("WORLD LITERATURE", "world literature"),
                            ("WORLD RELIGIONS", "world religions"),
                            ("YOGA", "yoga"),
                            ("ZOOLOGY", "zoology"),
                        ],
                        max_length=1131,
                        verbose_name="Courses",
                    ),
                ),
                (
                    "class_grade",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Class/Grade",
                    ),
                ),
                (
                    "profile",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teaching_experience",
                        to="users.teacherprofile",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TeacherEducation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_updated_at", models.DateTimeField(auto_now=True)),
                ("school", models.CharField(max_length=200, verbose_name="School")),
                ("degree", models.CharField(max_length=100, verbose_name="Degree")),
                (
                    "field",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Field of study",
                    ),
                ),
                ("start_year", models.DateField(verbose_name="Start Year")),
                ("end_year", models.DateField(verbose_name="End Year")),
                (
                    "grade",
                    models.CharField(
                        blank=True, max_length=10, null=True, verbose_name="Grade"
                    ),
                ),
                (
                    "activities",
                    models.TextField(blank=True, null=True, verbose_name="Activities"),
                ),
                (
                    "profile",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="education",
                        to="users.teacherprofile",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="StudentProfile",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "grade",
                    models.CharField(blank=True, max_length=100, verbose_name="Grade"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StudentEducation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_updated_at", models.DateTimeField(auto_now=True)),
                ("school", models.CharField(max_length=200, verbose_name="School")),
                ("degree", models.CharField(max_length=100, verbose_name="Degree")),
                (
                    "field",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Field of study",
                    ),
                ),
                ("start_year", models.DateField(verbose_name="Start Year")),
                ("end_year", models.DateField(verbose_name="End Year")),
                (
                    "grade",
                    models.CharField(
                        blank=True, max_length=10, null=True, verbose_name="Grade"
                    ),
                ),
                (
                    "activities",
                    models.TextField(blank=True, null=True, verbose_name="Activities"),
                ),
                (
                    "profile",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="education",
                        to="users.studentprofile",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ParentProfile",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="InstituteProfile",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Experience",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=100, verbose_name="Title")),
                (
                    "location",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Location"
                    ),
                ),
                ("start_year", models.DateField(verbose_name="Start Year")),
                (
                    "end_year",
                    models.DateField(blank=True, null=True, verbose_name="End Year"),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "employment_type",
                    models.CharField(
                        choices=[
                            ("PART_TIME", "part_time"),
                            ("FULL_TIME", "full_time"),
                            ("SELF_EMPLOYED", "self_employed"),
                            ("FREELANCE", "freelance"),
                            ("INTERNSHIP", "internship"),
                        ],
                        max_length=15,
                        verbose_name="Employment Type",
                    ),
                ),
                ("company", models.CharField(max_length=100, verbose_name="Company")),
                (
                    "profile",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="experience",
                        to="users.teacherprofile",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Institute",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("users.user",),
        ),
        migrations.CreateModel(
            name="Parent",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("users.user",),
        ),
        migrations.CreateModel(
            name="Student",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("users.user",),
        ),
        migrations.CreateModel(
            name="Teacher",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("users.user",),
        ),
    ]
